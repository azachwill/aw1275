---
title: "Deploy Your Models on Amazon SageMaker with vetiver"
date: '2023-06-05'
slug: vetiver-sagemaker
tags:
  - vetiver
  - sagemaker
authors:
  - Julia Silge
description: Description here.
alttext: Add alt text for header image.
blogcategories:
  - Products and Technology
events: blog
---

I'm excited to announce that [vetiver](https://vetiver.rstudio.com/) 0.2.1 for Python and R are both available (from [PyPI](https://pypi.org/project/vetiver/) and [CRAN](https://cran.r-project.org/package=vetiver), respectively). The vetiver framework for MLOps tasks provides fluent tooling to version, deploy, and monitor a trained model in either Python or R. Functions handle both recording and checking the model's input data prototype and predicting from a remote API endpoint.

You can install vetiver 0.2.1 for Python with:

```python
python -m pip install vetiver
```

And for R with:

```r
install.packages("vetiver")
```

To see all the changes in vetiver 0.2.1, check out the release notes [for Python](https://github.com/rstudio/vetiver-python/releases/tag/v0.2.1) or [for R](https://rstudio.github.io/vetiver-r/news/index.html#vetiver-021). You may be interested to learn about several updates:

- The REST APIs generated by vetiver now include an endpoint at `/metadata` to more easily access your model metadata. The vetiver framework creates some metadata automatically for your trained model, such as the packages used to train your model and a description. You can also store any custom metadata you need for your particular MLOps use case, for example, the model metrics you observed while [developing your model](https://vetiver.rstudio.com/learn-more/metrics-metadata.html).

- You can now deploy models using vetiver that were trained with [spaCy](https://spacy.io/), [keras](https://tensorflow.rstudio.com/), and [the luz API for torch](https://torch.mlverse.org/).

- As my colleague Gagan mentioned in [his recent post](https://posit.co/blog/data-science-on-sagemaker/), the vetiver R package now provides fluent support for deploying models to AWS SageMaker. We know this is a significant new integration, so let's dig a bit deeper!

## Deploy vetiver models to SageMaker

To deploy a model on SageMaker, start by creating a deployable model object with vetiver:

```r
library(vetiver)
cars_lm <- lm(mpg ~ ., data = mtcars)
v <- vetiver_model(cars_lm, "cars-linear")
```

This is clearly a very simple model, but you can deploy any of the [numerous model types](https://rstudio.github.io/vetiver-r/index.html) that vetiver supports.

Next, you store your model object as a [pin](https://pins.rstudio.com/) in an S3 bucket. You need to use an existing bucket here:

```r
library(pins)
## existing bucket:
identifier <- "sagemaker-vetiver-demo"

board <- board_s3(bucket = identifier)
vetiver_pin_write(board, v)
```

Much like the function [`vetiver_deploy_rsconnect()`](https://rstudio.github.io/vetiver-r/reference/vetiver_deploy_rsconnect.html) for Posit Connect, there is a single function that deploys your model as a SageMaker model endpoint from here!

```r
new_endpoint <- 
  vetiver_deploy_sagemaker(
    board = board,
    name = "cars-linear",
    instance_type = "ml.t2.medium"
  )
```

This single function takes care of everything that needs to happen to deploy your model:

- First, it builds and pushes a custom Docker image for your model (including all the dependencies needed to make predictions) to ECR.
- Second, it creates a SageMaker model object.
- Last, it creates and deploys a SageMaker model endpoint.

There are more [modular functions](https://rstudio.github.io/vetiver-r/reference/vetiver_sm_build.html) for these three steps available for advanced use cases. Check out my [recent blog post and screencast](https://juliasilge.com/blog/vetiver-sagemaker/) for how to use these functions and to understand deploying a model to SageMaker more deeply.

## Going further

- Like I mentioned earlier, the vetiver/SageMaker integration currently supports models trained in R. We know that there is already good support for deploying Python models to SageMaker, but if you are interested in using vetiver for Python on SageMaker, chime in [on this issue](https://github.com/rstudio/vetiver-python/issues/172) describing your use case and needs.

- If you're just getting started with SageMaker as an RStudio user, check out [this post](https://posit.co/blog/getting-started-rstudio-sagemaker/) by my colleague James Blair.

- If you want to learn more about using RStudio on SageMaker, including how to deploy models with vetiver, join my Posit colleagues Gagandeep Singh and Tom Mock on **June 6 at 11am ET**. Add the YouTube Premier to your calendar [here](https://www.addevent.com/event/IB17179159).

## Acknowledgments

I would like to particularly acknowledge the contributions of [Dyfan Jones](https://github.com/DyfanJones) to the new SageMaker support in the vetiver R package. In addition to Dyfan, we'd like to thank all the folks who have contributed to vetiver so far, whether via filing issues or contributing code or documentation since the 0.2.0 release.

For Python:

[&#x0040;dbkegley](https://github.com/dbkegley), [&#x0040;has2k1](https://github.com/has2k1), [&#x0040;isabelizimm](https://github.com/isabelizimm), [&#x0040;josho88](https://github.com/josho88), [&#x0040;juliasilge](https://github.com/juliasilge), [&#x0040;krumeto](https://github.com/krumeto), [&#x0040;machow](https://github.com/machow), and [&#x0040;MartinBaumga](https://github.com/MartinBaumga)

For R:

[&#x0040;dfalbel](https://github.com/dfalbel), [&#x0040;DyfanJones](https://github.com/DyfanJones), [&#x0040;eleanor-m](https://github.com/eleanor-m), [&#x0040;JosiahParry](https://github.com/JosiahParry), [&#x0040;juliasilge](https://github.com/juliasilge), [&#x0040;nipnipj](https://github.com/nipnipj), [&#x0040;pa-nathaniel](https://github.com/pa-nathaniel), [&#x0040;rdavis120](https://github.com/rdavis120), and [&#x0040;turalsadigov](https://github.com/turalsadigov)